version: 2

workspace: &workspace
    ~/Accounting

android_build_environment: &android_build_environment
    working_directory: *workspace
    docker:
        - image: circleci/android:api-28-alpha
    environment:
        JVM_OPTS: -Xmx3200m
        TERM: dumb

config_gcloud: &config_gcloud
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "dependencies.gradle"}}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

restore_cache: &restore_cache
    restore_cache:
        <<: *cache_key

save_cache: &save_cache
    save_cache:
        <<: *cache_key
        paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
            - /opt/android/sdk
            - ~/.m2

# Persist code
persist_code_to_workspace: &persist_code_to_workspace
    persist_to_workspace:
        root: /home/circleci/Accounting/
        paths: .

persist_apk_to_workspace: &persist_apk_to_workspace
    persist_to_workspace:
        root: .
        paths:
            - app/build/outputs/apk

attach_workspace: &attach_workspace
    attach_workspace:
        at: *workspace

jobs:
    checkout_code:
        <<: *android_build_environment
        steps:
            - checkout
            - *persist_code_to_workspace

    build:
        <<: *android_build_environment
        steps:
            - *attach_workspace

            - *restore_cache

            - run:
                name: Generating apk
                command: ./gradlew :app:assemble :app:assembleAndroidTest
            - store_artifacts:
                path: app/build/outputs/apk
                destination: apk

            - *save_cache  
            - *persist_apk_to_workspace

    test:
        <<: *android_build_environment
        steps:
            - *attach_workspace

            - *restore_cache

            - run:
                name: Lint and test
                command: ./gradlew :app:check
            - store_test_results:
                path: app/build/test-results
            - store_artifacts:
                path: app/build/reports
                destination: reports

            - *save_cache 

    ftl_tests:
        <<: *config_gcloud

        steps:
            - *attach_workspace
            - run:
                name: Setup Google Cloud auth
                command: bash ftl-tests/setup.sh
            - run: 
                name: Run tests on Firebase Test Lab
                command: bash ftl-tests/run-tests.sh
#            - run:
#                name: Download results
#                command: bash ftl-tests/download-results.sh firebase_test_results
                when: always
            - store_artifacts:
                path: firebase_test_results
            - store_test_results:
                path: firebase_test_results

workflows:
    version: 2

    build_and_test:
        jobs:
            - checkout_code
            - build:
                requires: 
                    - checkout_code
            - test:
                requires: 
                    - checkout_code
            - ftl_tests:
                requires:
                    - build
             




